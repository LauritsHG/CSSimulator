@page
@model ChargerGrainController
@{
    ViewData["Title"] = "Control Chargers";
    float ConnectedChargers = ChargerGrainStorage.chargerGrains.Count;
}
    <script>
        function startCharging(index) {
            $.get("api/chargergrain/startcharging/"+index, function (data) {
                //$("a").html(data);
            window.location.reload();
            });
        console.log(index); 
        }
    function stopCharging(index) {
        $.get("api/chargergrain/stopcharging/"+index, function (data) {
            //$("a").html(data);
            window.location.reload();
        });
        console.log(index);
    }
    // Quick way to keep data updated, however there are probably better ways.
    setTimeout(function () {
        window.location.reload(1);
    }, 5000);
    </script>


<h1>@ViewData["Title"]</h1>
<p>GrainAmount: @ConnectedChargers</p>
@for (int i = 0;i<ChargerGrainStorage.chargerGrains.Count;i++){
    <div style="width:15%; display:inline-block">
        <a>@ChargerGrainStorage.chargerGrains.ElementAt(i).identity</a>
        <br/>
        <input type="button" onclick="startCharging(@i)" value="Start" />
        <input type="button" onclick="stopCharging(@i)" value="Stop" />
        <a>@ChargerGrainStorage.chargerGrains.ElementAt(i).status</a>
        <br/>
        @if (ChargerGrainStorage.chargerGrains.ElementAt(i)@*chargerGrains[i]*@.lastMessage == "Offline")
        {
            <a style="background-color: lightcoral; overflow-wrap: break-word;">Last Msg: @ChargerGrainStorage.chargerGrains.ElementAt(i).lastMessage</a>
        }
        else if (ChargerGrainStorage.chargerGrains.ElementAt(i)@*chargerGrains[i]*@.lastMessage != null)
        {
            <a style="background-color: green; overflow-wrap: break-word;">Last Msg: @ChargerGrainStorage.chargerGrains.ElementAt(i).lastMessage</a>
        }
        else{
            <a>Last Msg: @ChargerGrainStorage.chargerGrains.ElementAt(i).lastMessage</a>
        }
        <hr />
    </div>
}


